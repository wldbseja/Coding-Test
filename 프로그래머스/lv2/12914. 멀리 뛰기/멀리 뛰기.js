// 한번에 1칸, 또는 2칸밖에 이동 가능
// dp로 구현


function solution(n) {
  // DP 배열 초기화 
  const dp = Array(n+1).fill(0);
  // 한칸일때, 두칸일때 방법의 수 설정
  dp[1] = 1; 
  dp[2] = 2; 
  // DP 배열을 이용하여 나머지 칸에 대한 방법의 수 구하기
  // 1,2는 이미 설정되어있기 때문에 i = 3부터 시작
  for (let i = 3; i <= n; i++) {
    // i-1 칸과 i-2 칸의 방법의 수를 더하여 저장
    // % 1234567 하는 이유 : 결과값을 작은 수로 제한하기 위함 (시간복잡도 등)
    dp[i] = (dp[i - 1] + dp[i - 2]) % 1234567;
  }
  // 최종적으로 마지막에 저장된 방법의 수를 리턴
  return dp[n];
}